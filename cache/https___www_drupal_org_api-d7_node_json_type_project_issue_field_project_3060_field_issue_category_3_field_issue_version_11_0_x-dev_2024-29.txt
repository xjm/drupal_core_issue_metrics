[{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>Contextual filters in Views always use the equality operator. It would be very useful to be able to choose the operator.<\/p>\n<p>Example use case: Filtering on <code class=\"language-php\">Content: Changed<\/code> that is greater-than or equal-to the given date, instead of only being able to filter on equal-to the date.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Add support for selecting an operator. Leave the default as equality so that nothing changes unless the site builder chooses a different operator.<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<p>Implement.<\/p>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<p>Addition of UI for selecting an operator.<\/p>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<p>None.<\/p>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<p>Optionally store an operator with each contextual filter.<\/p>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>\n<h3 id=\"original\">Original report<\/h3>\n<p>Exposed filters for fields such as dates can have an operator like 'less than' or 'more than'.<\/p>\n<p>I can't seem to find where this would be for contextual filters.<\/p>\n<p>Why: a site builder might want to make views listing of articles older than the current page (node) article.<\/p>\n<p>See also: <a href=\"https:\/\/drupal.stackexchange.com\/questions\/252884\/is-there-a-specific-reason-that-views-contextual-filters-lack-the-ability-to-spe\" rel=\"nofollow\">https:\/\/drupal.stackexchange.com\/questions\/252884\/is-there-a-specific-re...<\/a><\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[],"field_issue_status":"1","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"views.module","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1716906959","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/493050","id":493050,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/690914","id":690914,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3499769","id":3499769,"resource":"user"}],"nid":"3177845","vid":"13581091","is_new":false,"type":"project_issue","title":"Allow choosing the operator for Views contextual filters","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3177845","edit_url":"https:\/\/www.drupal.org\/node\/3177845\/edit","status":"1","promote":"0","sticky":"0","created":"1603147740","changed":"1716906959","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3499769","id":"3499769","resource":"user","name":"silverham"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/13875585","id":13875585,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/13877813","id":13877813,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/13886177","id":13886177,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15614484","id":15614484,"resource":"comment"}],"comment_count":"4","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"3","has_new_content":null,"last_comment_timestamp":"1716906959"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>The discovery object for recipes is currently limited in scope. Expanding the class to discover recipes only in the currently intended folders will ensure contrib modules or project browser (when it moves to core) won't have to reinvent the discovery process.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>The RecipeDiscovery will have similar method names to ExtensionDiscovery to help standardize the code.<br \/>\nThe discovery object will have a method that returns an array of Recipe objects, as discovered.<br \/>\nPaths and path structure for recipes will currently be quite limited to just core and \/recipes, intentionally, but can be easily altered to include other directories if so desired.<\/p>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<p>NONE<\/p>\n<h3 id=\"summary-release-notes\">Release notes snippet:<\/h3>\n<p>(TBD)<\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/197489","id":"197489","resource":"taxonomy_term"},{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/202464","id":"202464","resource":"taxonomy_term"},{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/345","id":"345","resource":"taxonomy_term"}],"field_issue_status":"13","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"recipe system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3446329","id":"3446329","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3446257","id":"3446257","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3447210","id":"3447210","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3447886","id":"3447886","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1715352749","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2507260","id":2507260,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2665733","id":2665733,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1414312","id":1414312,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/157725","id":157725,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/54611","id":54611,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/180064","id":180064,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/205645","id":205645,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/224754","id":224754,"resource":"user"}],"nid":"3446354","vid":"13572042","is_new":false,"type":"project_issue","title":"Expand Drupal\\Core\\Recipe\\RecipeDiscovery to allow discovering available recipes, likely for use in Project Browser","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3446354","edit_url":"https:\/\/www.drupal.org\/node\/3446354\/edit","status":"1","promote":"0","sticky":"0","created":"1715280096","changed":"1716256124","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/224754","id":"224754","resource":"user","name":"jnicola"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15589627","id":15589627,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15589629","id":15589629,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15589635","id":15589635,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15589873","id":15589873,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15589881","id":15589881,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15589945","id":15589945,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15590996","id":15590996,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591002","id":15591002,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591001","id":15591001,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591015","id":15591015,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591113","id":15591113,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591145","id":15591145,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591160","id":15591160,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595670","id":15595670,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15596939","id":15596939,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597553","id":15597553,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15598263","id":15598263,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15600176","id":15600176,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15603169","id":15603169,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15603180","id":15603180,"resource":"comment"}],"comment_count":"20","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"8","has_new_content":null,"last_comment_timestamp":"1716256124"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>Need a central location for loading information about the site.<\/p>\n<p>This extends <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-13\"><a href=\"\/project\/drupal\/issues\/3446674\" title=\"Status: Needs work, Assigned to: Jon Pugh\">#3446674: Add \"Main URL\" to \"Basic site settings\" and \"Status Report\" page.<\/a><\/span><\/p>\n<p>See diff: <a href=\"https:\/\/git.drupalcode.org\/issue\/drupal-3446677\/-\/compare\/11.x...3446677-add-system-site-service\" rel=\"nofollow\">https:\/\/git.drupalcode.org\/issue\/drupal-3446677\/-\/compare\/11.x...3446677...<\/a><\/p>\n<h3>Example implementation<\/h3>\n<p>The Status Report page in this branch is updated to show this information:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">    $site_name = \\Drupal::service('system.site')-&gt;getName();\n    $site_slogan = \\Drupal::service('system.site')-&gt;getSlogan();\n\n    $current_url = $this-&gt;siteManager-&gt;getCurrentUrl();\n    $current_url_description = '';\n\n    $main_url = $this-&gt;siteManager-&gt;getMainUrl();\n    $main_url_description = t('The &lt;em&gt;Main URL&lt;\/em&gt; is where the live production site is hosted.');\n    if (empty($main_url)) {\n      $main_url = $current_url;\n    }\n\n    if (!$this-&gt;siteManager-&gt;isMain()) {\n      $current_url_description = t('This site is a replica of &lt;a href=\":main_url\" target=\"_blank\"&gt;:main_url&lt;\/a&gt;.', [\n        ':main_url' =&gt; $main_url,\n      ]);\n    }\n\n<\/code><\/pre><h3>SiteProperty Plugins<\/h3>\n<p>The individual items that are currently handled by \"hook_requirements\" can now be provided by \"SiteProperty\" plugins.<\/p>\n<p>For example: Last Cron:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">class DrupalCronLast extends SitePropertyPluginBase {\n  public function value() {\n    return \\Drupal::state()-&gt;get('system.cron_last');\n  }\n\n  public function view() {\n    return [\n      '#type' =&gt; 'item',\n      '#title' =&gt; t('Last cron run'),\n      '#markup' =&gt; \\Drupal::service('date.formatter')-&gt;format($this-&gt;value()),\n      '#description' =&gt; t(\":interval ago\", [\n        ':interval' =&gt; \\Drupal::service('date.formatter')-&gt;formatInterval(time() - $this-&gt;value()),\n      ]),\n      '#description_display' =&gt; 'after'\n    ];\n  }\n}\n<\/code><\/pre><h3>Screenshots<\/h3>\n<p><img src=\"\/files\/issues\/2024-05-13\/Screenshot%20from%202024-05-13%2011-49-46.png\" alt=\"Status page\" \/><\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[],"field_issue_status":"1","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"system.module","field_issue_assigned":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/17028","id":"17028","resource":"user"},"field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6935783","id":"6935783","resource":"file"},"display":"1"},{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6935799","id":"6935799","resource":"file"},"display":"1"},{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6935804","id":"6935804","resource":"file"},"display":"1"}],"field_issue_parent":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3446143","id":"3446143","resource":"node"},"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3446674","id":"3446674","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1715444675","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/54611","id":54611,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/64620","id":64620,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/17028","id":17028,"resource":"user"}],"nid":"3446677","vid":"13565138","is_new":false,"type":"project_issue","title":"Add \"system.site\" service and SiteProperty plugins to improve the Status Report page and provide structured data about the site.","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3446677","edit_url":"https:\/\/www.drupal.org\/node\/3446677\/edit","status":"1","promote":"0","sticky":"0","created":"1715444675","changed":"1715702000","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/17028","id":"17028","resource":"user","name":"Jon Pugh"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15591952","id":15591952,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593419","id":15593419,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593437","id":15593437,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593440","id":15593440,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593445","id":15593445,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593479","id":15593479,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593551","id":15593551,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593560","id":15593560,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593563","id":15593563,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593576","id":15593576,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15593583","id":15593583,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595228","id":15595228,"resource":"comment"}],"comment_count":"12","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"3","has_new_content":null,"last_comment_timestamp":"1715702000"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>If I want to mingle with a list item field in my twig template, I need to write something like<\/p>\n<p><code class=\"language-php\">{{ \"(\" ~ node.field_state.getSetting('allowed_values')[node.field_state.value] ~\")\" }}<\/code><\/p>\n<p>If I want the same in a preprocess, similarly I have to use: <\/p>\n<p><code class=\"language-php\">$node-&gt;field_state-&gt;getSetting('allowed_values')[$node-&gt;field_state-&gt;value];<\/code><\/p>\n<p>Or even more verbose to be technically correct:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">      $provider = $node-&gt;field_state-&gt;getFieldDefinition()\n        -&gt;getFieldStorageDefinition()\n        -&gt;getOptionsProvider('value', $node);\n      \/\/ Flatten the possible options, to support opt groups.\n      $options = OptGroup::flattenOptions($provider-&gt;getPossibleOptions());\n      $label = $options[$node-&gt;field_state-&gt;value];\n<\/code><\/pre><p>\nThis is too much implementation detail being exposed for such a simple usecase.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Allow to use <code class=\"language-php\">{{ \"(\" ~ node.field_state.valueLabel ~\")\" }}<\/code> as you would use <code class=\"language-php\">{{ \"(\" ~ node.field_state.value ~\")\" }}<\/code>.<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<p>Discuss, tests.<\/p>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<p>None.<\/p>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<p>New method label() on ListItemBase.<\/p>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<p>None.<\/p>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>\n<p>TBD<\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/345","id":"345","resource":"taxonomy_term"}],"field_issue_status":"13","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"options.module","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1715815242","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3502327","id":3502327,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/395439","id":395439,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/46549","id":46549,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/522252","id":522252,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/180064","id":180064,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/959536","id":959536,"resource":"user"}],"nid":"3447203","vid":"13567071","is_new":false,"type":"project_issue","title":"Improve DX of retrieving the label of a list item field","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3447203","edit_url":"https:\/\/www.drupal.org\/node\/3447203\/edit","status":"1","promote":"0","sticky":"0","created":"1715723066","changed":"1715815242","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/959536","id":"959536","resource":"user","name":"penyaskito"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595601","id":15595601,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595603","id":15595603,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595608","id":15595608,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595625","id":15595625,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595640","id":15595640,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595794","id":15595794,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595795","id":15595795,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595797","id":15595797,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15595803","id":15595803,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597344","id":15597344,"resource":"comment"}],"comment_count":"10","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"6","has_new_content":null,"last_comment_timestamp":"1715815242"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>When adding a remote video in media library the standard thumbnail fetched from oEmbed.<br \/>\nThis results in low res images when using the thumbnails while theming. <\/p>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>We should get the highres thumbnails from the providers and use drupal core image styles to generate low res derivates if needed. <\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[],"field_issue_status":"13","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"media system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6936487","id":"6936487","resource":"file"},"display":"1"},{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6937498","id":"6937498","resource":"file"},"display":"1"}],"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1715953434","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2760035","id":2760035,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1850070","id":1850070,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3511920","id":3511920,"resource":"user"}],"nid":"3447326","vid":"13569330","is_new":false,"type":"project_issue","title":"Get large thumbnail for Vimeo and Youtube in media oEmbed. ","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3447326","edit_url":"https:\/\/www.drupal.org\/node\/3447326\/edit","status":"1","promote":"0","sticky":"0","created":"1715775404","changed":"1715954523","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3511920","id":"3511920","resource":"user","name":"Wouter Waeytens"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15596303","id":15596303,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15596307","id":15596307,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15596317","id":15596317,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15596345","id":15596345,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15596522","id":15596522,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15599692","id":15599692,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15599798","id":15599798,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15599835","id":15599835,"resource":"comment"}],"comment_count":"8","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"3","has_new_content":null,"last_comment_timestamp":"1715954523"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>In PHP, and most other languages, it's common to add inline comments that add context or explanations related to the lines of code that follow. This is very important so that other developers have that information when reading other developers' code, or even the authors themselves if they revisit the code later. Not having adequate information can lead to regressions when code is changed.<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">\/\/ This code does this because of that.\n$my_var = my_function($my_arg);\n<\/code><\/pre><p>\nYAML syntax supports comments as well<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\"># We temporarily disable X feature until Y problem is solved.\nx_feature: false\n<\/code><\/pre><p>\nHowever, configuration exports do not maintain the comments in the resulting files.<\/p>\n<p>Developers pretty commonly export configuration and just commit to vcs without wanting to bother reverting the comment removals - understandably, who wants to have to do that every time? Most commonly, they don't even bother to read the removed comments and evaluate whether there's a reason for keeping them - because hey, who puts comments in configuration files. The result is that important information is lost.<\/p>\n<p>The potential impact of this though should not be underestimated. Configuration is code as well and it controls code. Changing a simple value e.g. from <code class=\"language-php\">true<\/code> to <code class=\"language-php\">false<\/code> can have far reaching changes, even uninstall an entire module and potentially cause data loss, for example, or show\/hide a checkout pane in a commerce website etc, enable\/disable integrations with external systems etc. In the example above, a new developer comes in a year later and enables feature X because the reason for disabling it is not known, causing a regression.<\/p>\n<p>I find pretty frequently the need to document why certain configuration properties are given the values they are. The only place where this can be documented that is relevant is inline, in the YAML configuration file. Same way that you can create docs and readme files for a project, but none of these can replace inline PHP comments. Because when another developer comes to work on that piece of code, they may not even be aware that there is that other place somewhere else that contains relevant information to go look for it there.<\/p>\n<p>In short, if comments are not available where they are most relevant i.e. inline in the YAML configuration file, it is as if they don't exist and sooner or later bad things happen.<\/p>\n<p>I'd like to investigate the possibilities for maintaining comments on the generated configuration files.<\/p>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<p>- Add a comment on any configuration file.<br \/>\n- Run <code class=\"language-php\">drush cex<\/code><br \/>\n- Notice that the comment is gone.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>As a probably low-hanging fruit that should be doable but might have a big impact, do not regenerate files that have not changed. Currently, <code class=\"language-php\">drush cex<\/code> seems to actually recreate the files on the disk for all configuration objects. Is there a reason for this? This is important in this context because if I have comments in 10 files, every time I export configuration all of them are lost and I have to revert them all in Git to keep it clean - even if the configuration changes that I exported are not on any of those files. But if the export does not touch them unless they have been changed, then 95% of the cases there's nothing extra to do in my workflow.<\/p>\n<p>That might be good enough if full solutions are too complicated.<\/p>\n<p>A full solution would be to understand where the changes have happened, including adding or removing lines, without losing comments. There should be tools for this, either git style tools or even in PHP e.g. code beautifiers make changes including breaking a line into multiple lines without removing inline comments. <\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<p>- Investigate possibilities<br \/>\n- Implement solution<\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[],"field_issue_status":"1","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"configuration system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1715829062","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/751908","id":751908,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1850070","id":1850070,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2392706","id":2392706,"resource":"user"}],"nid":"3447497","vid":"13567201","is_new":false,"type":"project_issue","title":"Keep comments in configuration files","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3447497","edit_url":"https:\/\/www.drupal.org\/node\/3447497\/edit","status":"1","promote":"0","sticky":"0","created":"1715829062","changed":"1715830106","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2392706","id":"2392706","resource":"user","name":"krystalcode"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597475","id":15597475,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597478","id":15597478,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597481","id":15597481,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597482","id":15597482,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597483","id":15597483,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15597484","id":15597484,"resource":"comment"}],"comment_count":"6","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"3","has_new_content":null,"last_comment_timestamp":"1715830106"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>From <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-6\"><a href=\"\/project\/infrastructure\/issues\/3440128\" title=\"Status: Closed (works as designed)\">#3440128: version in info.yml for general project<\/a><\/span>, when using an installation profile, there is no \"version\" put automatically in .info.yml file of the profile and in its modules\/themes .info.yml files.<\/p>\n<p>This will provoke a fatal error on status report page due to:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">TypeError: Drupal\\Component\\Utility\\Html::escape(): Argument #1 ($text) must be of type string, null given, called in \/project\/app\/core\/lib\/Drupal\/Component\/Render\/FormattableMarkup.php on line 256 in Drupal\\Component\\Utility\\Html::escape() (line 431 of core\/lib\/Drupal\/Component\/Utility\/Html.php).\nDrupal\\Component\\Render\\FormattableMarkup::placeholderEscape(NULL) (Line: 229)\nDrupal\\Component\\Render\\FormattableMarkup::placeholderFormat('%profile_name (%profile-%version)', Array) (Line: 195)\nDrupal\\Core\\StringTranslation\\TranslatableMarkup-&gt;render() (Line: 15)\nDrupal\\Core\\StringTranslation\\TranslatableMarkup-&gt;__toString() (Line: 336)\nTwig\\Template-&gt;render(Array) (Line: 38)\nTwig\\TemplateWrapper-&gt;render(Array) (Line: 39)\ntwig_render_template('core\/themes\/claro\/templates\/status-report-grouped.html.twig', Array) (Line: 348)\nDrupal\\Core\\Theme\\ThemeManager-&gt;render('status_report_grouped', Array) (Line: 446)\nDrupal\\Core\\Render\\Renderer-&gt;doRender(Array, ) (Line: 203)\nDrupal\\Core\\Render\\Renderer-&gt;render(Array) (Line: 475)\nDrupal\\Core\\Template\\TwigExtension-&gt;escapeFilter(Object, Array, 'html', NULL, 1) (Line: 80)\n__TwigTemplate_71280d5a17f166e234dcd7a30c6eb76d-&gt;doDisplay(Array, Array) (Line: 360)\nTwig\\Template-&gt;yield(Array) (Line: 335)\nTwig\\Template-&gt;render(Array) (Line: 38)\nTwig\\TemplateWrapper-&gt;render(Array) (Line: 39)\ntwig_render_template('core\/themes\/claro\/templates\/status-report-page.html.twig', Array) (Line: 348)\nDrupal\\Core\\Theme\\ThemeManager-&gt;render('status_report_page', Array) (Line: 446)\n...\n<\/code><\/pre><p>\nAlso it would be nice that this kind of information would be handled with Composer data directly. Not only for installation profile, but also for modules and themes.<\/p>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<p>Install a module in dev version using composer <code class=\"language-php\">composer require drupal\/address:2.0.x-dev<\/code>.<br \/>\nOn admin\/modules, there is no indicated version for the module.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Try to get data from Composer.<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<p>- POC: done in MR<br \/>\n- handle sub-extensions<br \/>\n- handle tests extensions?<br \/>\n- if possible make the hardcoded 'drupal\/' dynamic<br \/>\n- write tests<\/p>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<p>Versions of extensions not present in .info.yml but handled with Composer will be displayed on the admin pages.<\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/345","id":"345","resource":"taxonomy_term"}],"field_issue_status":"13","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"extension system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6937173","id":"6937173","resource":"file"},"display":"1"}],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3440128","id":"3440128","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3005229","id":"3005229","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1715953678","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1790054","id":1790054,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3252890","id":3252890,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2760035","id":2760035,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/180064","id":180064,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2388214","id":2388214,"resource":"user"}],"nid":"3447672","vid":"13569935","is_new":false,"type":"project_issue","title":"Try to parse version in composer if not in .info.yml","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3447672","edit_url":"https:\/\/www.drupal.org\/node\/3447672\/edit","status":"1","promote":"0","sticky":"0","created":"1715880316","changed":"1716027094","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2388214","id":"2388214","resource":"user","name":"Grimreaper"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15598574","id":15598574,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15598562","id":15598562,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15598578","id":15598578,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15599324","id":15599324,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15599806","id":15599806,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15600583","id":15600583,"resource":"comment"}],"comment_count":"6","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"5","has_new_content":null,"last_comment_timestamp":"1716027094"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>The update module (packaged with core) provides a lot of functionality:<\/p>\n<ul>\n<li>Reports interface to view a list of modules and themes that are out of date\n<\/li><li>Email notifications when there are updates available\n<\/li><li>Update individual modules and themes by uploading a file via the UI\n<\/li><li>Report usage metrics (telemetry) of installed modules and themes back to Drupal.org\n<\/li><\/ul>\n<p>For people that run a large number of sites, especially those that share a common codebase (very common in Higher Ed and Government), it's very common to NOT enable this module, because none of the functionality is needed. As a result, Drupal.org misses out on receiving a lot of telemetry data because it's bundled in this with this module.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Separate out the telemetry reporting from the update module and instead bring it into core. I briefly scanned thru the code and didn't see an obvious area where this is being reported, so I think what's happening is that when the module gets its list of extensions and asks Drupal.org for the latest versions of those extensions, Drupal.org registers the usage. So there may need to be some work on Drupal.org's end to faciliate this.<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<p>Decide if it should be opt-in or opt-out. There's some discussion about this in <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-8\"><a href=\"\/project\/ideas\/issues\/2940737\" title=\"Status: Needs review, Assigned to: hestenet\">#2940737: Telemetry initiative<\/a><\/span>.<\/p>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[],"field_issue_status":"1","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"update.module","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_parent":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/2940737","id":"2940737","resource":"node"},"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1716252916","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/566352","id":566352,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/429621","id":429621,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/80733","id":80733,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/64620","id":64620,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/578762","id":578762,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/112588","id":112588,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/788032","id":788032,"resource":"user"}],"nid":"3448401","vid":"13581400","is_new":false,"type":"project_issue","title":"Moving project telemetry reporting from the update module into core","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3448401","edit_url":"https:\/\/www.drupal.org\/node\/3448401\/edit","status":"1","promote":"0","sticky":"0","created":"1716252916","changed":"1716924642","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/788032","id":"788032","resource":"user","name":"bkosborne"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15603167","id":15603167,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15614885","id":15614885,"resource":"comment"}],"comment_count":"2","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"7","has_new_content":null,"last_comment_timestamp":"1716924642"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>Drupal 10.2.6<br \/>\nRocky Linux 9.3<br \/>\nApache 2.4.57<br \/>\nPHP 8.3.6<\/p>\n<p>Hello!!<br \/>\nFor some time now I have been experiencing attacks on my site through searches in Drupal. A lot of lookups with strange code and symbols are performed simultaneously from an IP until the server is out of memory and without service. Would there be a way to limit the number of searches that can be performed from the same IP during a period of time, or how could I solve this problem?<\/p>\n<p>Thanks in advance!!<\/p>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/374","id":"374","resource":"taxonomy_term"}],"field_issue_status":"16","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"search.module","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1716465915","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/12302","id":12302,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1850070","id":1850070,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3651762","id":3651762,"resource":"user"}],"nid":"3449351","vid":"13582182","is_new":false,"type":"project_issue","title":"Limit number of searches by IP","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3449351","edit_url":"https:\/\/www.drupal.org\/node\/3449351\/edit","status":"1","promote":"0","sticky":"0","created":"1716464889","changed":"1716983472","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3651762","id":"3651762","resource":"user","name":"jmohino"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608356","id":15608356,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608387","id":15608387,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608404","id":15608404,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608458","id":15608458,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608506","id":15608506,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608514","id":15608514,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15615833","id":15615833,"resource":"comment"}],"comment_count":"7","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"3","has_new_content":null,"last_comment_timestamp":"1716983472"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>Currently, making a form element update via AJAX requires setting up the #ajax property on the element, and implementing a form AJAX callback. Typically this callback just returns the form element like this:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">function myCallback($form, FormStateInterface $form_state) {\n  return $form['my_element'];\n}\n<\/code><\/pre><p>\nThat's pointless boilerplate code.<\/p>\n<p>Furthermore, you can only update a single form element with this system. You can't have multiple parts of the form update in response to one element. <\/p>\n<p>Nor can you extend a form by having elements added with hook_form_alter() react to an element that's already an AJAX trigger.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Introduce a declarative AJAX system, similar to how form states work, like this:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">$form['controlling_element'] = [\n  '#type' =&gt; 'checkbox',\n  '#title' =&gt; 'Click me',\n];\n\n\/\/ This container is automatically updated when the user changes the value of\n\/\/ the controlling_element checkbox.\n$form['my_container'] = [\n  '#type' =&gt; 'container',\n  '#ajax' =&gt; [\n    'updated_by' =&gt; [\n      \/\/ Form parents of the controlling element.\n      ['controlling_element'],\n    ],\n  ],\n];\n<\/code><\/pre><p>\nMultiple elements can declare that they are updated by one controlling element, and conversely, one element can be updated by more than one controlling element. There is no longer the need for a callback: everything is declared in the form elements.<\/p>\n<p>I've created a proof-of-concept module with working demos here: <a href=\"https:\/\/www.drupal.org\/project\/declarative_form_ajax\" rel=\"nofollow\">https:\/\/www.drupal.org\/project\/declarative_form_ajax<\/a><\/p>\n<p>This requires a few tweaks, but those wouldn't be necessary within core.<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<p>Create a core MR.<\/p>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<p>None.<\/p>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<p>See above.<\/p>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<p>None.<\/p>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[],"field_issue_status":"1","field_issue_priority":"300","field_issue_category":"3","field_issue_component":"forms system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3404409","id":"3404409","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1716472012","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/27985","id":27985,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/395439","id":395439,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2488816","id":2488816,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1322186","id":1322186,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1850070","id":1850070,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/107701","id":107701,"resource":"user"}],"nid":"3449393","vid":"13576424","is_new":false,"type":"project_issue","title":"Declarative Form AJAX","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3449393","edit_url":"https:\/\/www.drupal.org\/node\/3449393\/edit","status":"1","promote":"0","sticky":"0","created":"1716472012","changed":"1716472172","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/107701","id":"107701","resource":"user","name":"joachim"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608617","id":15608617,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15608638","id":15608638,"resource":"comment"}],"comment_count":"2","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"6","has_new_content":null,"last_comment_timestamp":"1716472172"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>Currently \"view own unpublished content\" access is only checked and grants access a user to its own content when <code class=\"language-php\">-&gt;access('view')<\/code> method is called on an <strong>already loaded Node object<\/strong> by node id or via <code class=\"language-php\">loadMultiple()<\/code>.<br \/>\nHowever, when Node ids are collected vua an entity query or database query with <code class=\"language-php\">node_access<\/code> tag in place, unpublished contents by the (current) user are not returned.<\/p>\n<p>E.g.:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">    $result = \\Drupal::entityQuery('node')\n      -&gt;accessCheck(TRUE)\n      -&gt;execute();\n<\/code><\/pre><p>\nThis leads to interesting and long term problematic workarounds both in Core and in contrib space:<\/p>\n<ul>\n<li>IMO the <code class=\"language-php\">\\Drupal\\node\\Plugin\\views\\filter\\Status<\/code> Views filter should not exist, but it does and therefore <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-14\"><a href=\"\/project\/drupal\/issues\/3449181\" title=\"Status: Reviewed &amp; tested by the community\">#3449181: The content overview Views view filters out unpublished content <\/a><\/span> also exists<\/li>\n<li>The <code class=\"language-php\">\\Drupal\\node\\Plugin\\EntityReferenceSelection\\NodeSelection<\/code> entity reference selection plugin should grant access to (own) unpublished content without additional workarounds, see <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-13\"><a href=\"\/project\/drupal\/issues\/2845144\" title=\"Status: Needs work\">#2845144: User can't reference unpublished content even when they have access to it<\/a><\/span><\/li>\n<li>Contrib and custom node access modules should not need to re-implement \"view own unpublished content\" permission handling in the query access level\n<ul>\n<li><a href=\"https:\/\/www.drupal.org\/project\/view_unpublished\" rel=\"nofollow\">View Unpublished<\/a><\/li>\n<li><a href=\"https:\/\/www.drupal.org\/project\/node_view_permissions\" rel=\"nofollow\">Node View Permissions<\/a>  - and <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-1\"><a href=\"\/project\/node_view_permissions\/issues\/3346486\" title=\"Status: Active\">#3346486: Node author cannot view its own unpublished node according to entity query access<\/a><\/span><\/li>\n<li><a href=\"https:\/\/git.drupalcode.org\/project\/search_api\/-\/blob\/8.x-1.34\/src\/Plugin\/search_api\/processor\/ContentAccess.php#L324-346\" rel=\"nofollow\">Search API's ContentAccess processor<\/a><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/437","id":"437","resource":"taxonomy_term"}],"field_issue_status":"1","field_issue_priority":"300","field_issue_category":"3","field_issue_component":"node system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/2845144","id":"2845144","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1717503297","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1879760","id":1879760,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2470660","id":2470660,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1029484","id":1029484,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/315522","id":315522,"resource":"user"}],"nid":"3452449","vid":"13597213","is_new":false,"type":"project_issue","title":"Grant query level access to own unpublished nodes","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3452449","edit_url":"https:\/\/www.drupal.org\/node\/3452449\/edit","status":"1","promote":"0","sticky":"0","created":"1717503297","changed":"1718030881","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/315522","id":"315522","resource":"user","name":"mxr576"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15626381","id":15626381,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15626385","id":15626385,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15626389","id":15626389,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15626396","id":15626396,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634318","id":15634318,"resource":"comment"}],"comment_count":"5","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"4","has_new_content":null,"last_comment_timestamp":"1718030881"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>When a functional test outputs the HTML response for a JSONAPI response (or any other JSON), the JSON is all one long string which is hard to read.<\/p>\n<p>It would be nice if this were formatted in a human-readable way.<\/p>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Not sure how to do this.<\/p>\n<p>The $message parameter isn't only JSON, it has a prefix that is text, so we can't do something hacky like json_encode(json_decode(), JSON_PRETTY_PRINT).<\/p>\n<p>I was wondering about adding an HTTP middleware in tests to do this <a href=\"https:\/\/ourcodeworld.com\/articles\/read\/1120\/how-to-pretty-print-a-jsonresponse-in-symfony-4\" rel=\"nofollow\">https:\/\/ourcodeworld.com\/articles\/read\/1120\/how-to-pretty-print-a-jsonre...<\/a> for JSON responses, but JSONAPI module for one isn't using Symfony JSON responses AFAICT.<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/437","id":"437","resource":"taxonomy_term"}],"field_issue_status":"1","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"phpunit","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1717509414","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1307444","id":1307444,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/107701","id":107701,"resource":"user"}],"nid":"3452484","vid":"13590808","is_new":false,"type":"project_issue","title":"BrowserHtmlDebugTrait::htmlOutput() should format JSON","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3452484","edit_url":"https:\/\/www.drupal.org\/node\/3452484\/edit","status":"1","promote":"0","sticky":"0","created":"1717509414","changed":"1717509414","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/107701","id":"107701","resource":"user","name":"joachim"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15626561","id":15626561,"resource":"comment"}],"comment_count":"1","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"2","has_new_content":null,"last_comment_timestamp":"1717509414"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>This is folow up issue from <a href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/3393400#comment-15627607\" rel=\"nofollow\">https:\/\/www.drupal.org\/project\/drupal\/issues\/3393400#comment-15627607<\/a><\/p>\n<h4 id=\"summary-steps-reproduce\">Steps to reproduce<\/h4>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<ul>\n<li>Decide if ID attributes are still necessary for <code class=\"language-php\">&lt;li&gt;<\/code> tags and get rid of them or manage them via JS<\/li>\n<li>Bring back h4 ID and their references in aria-labelledby<\/li>\n<\/ul>\n<p>This should be managed by JS<br \/>\n<a href=\"https:\/\/git.drupalcode.org\/project\/drupal\/-\/merge_requests\/7980\/diffs?commit_id=b99b95524c0c8f1b3a53a9d4d498a72adf571e12\" rel=\"nofollow\">https:\/\/git.drupalcode.org\/project\/drupal\/-\/merge_requests\/7980\/diffs?co...<\/a><\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/7066","id":"7066","resource":"taxonomy_term"}],"field_issue_status":"13","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"navigation.module","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3393400","id":"3393400","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3438976","id":"3438976","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1719235596","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3252890","id":3252890,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/180064","id":180064,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3643629","id":3643629,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/282415","id":282415,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/598310","id":598310,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/410384","id":410384,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2755993","id":2755993,"resource":"user"}],"nid":"3452724","vid":"13613039","is_new":false,"type":"project_issue","title":"Prove the need, and add back the ID and aria-labelled-by to title in Navigation menus with JS","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3452724","edit_url":"https:\/\/www.drupal.org\/node\/3452724\/edit","status":"1","promote":"0","sticky":"0","created":"1717597789","changed":"1719238078","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2755993","id":"2755993","resource":"user","name":"finnsky"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15628402","id":15628402,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15628412","id":15628412,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15628421","id":15628421,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15628442","id":15628442,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15644274","id":15644274,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15644275","id":15644275,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15651865","id":15651865,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15651866","id":15651866,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15652678","id":15652678,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15652687","id":15652687,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15652688","id":15652688,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15652689","id":15652689,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653387","id":15653387,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653442","id":15653442,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653440","id":15653440,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653445","id":15653445,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653458","id":15653458,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653461","id":15653461,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15653493","id":15653493,"resource":"comment"}],"comment_count":"19","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"7","has_new_content":null,"last_comment_timestamp":"1719238078"},{"body":{"value":"<h3 id=\"summary-problem-motivation\">Problem\/Motivation<\/h3>\n<p>We already have a <code class=\"language-php\">\\Drupal\\Core\\DependencyInjection\\AutowireTrait<\/code> class, suitable for wiring dependencies into classes extending <code class=\"language-php\">\\Drupal\\Core\\DependencyInjection\\ContainerInjectionInterface<\/code>, implemented in <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-7\"><a href=\"\/project\/drupal\/issues\/3394870\" title=\"Status: Closed (fixed)\">#3394870: Allow controller service wiring via constructor parameter attributes<\/a><\/span><\/p>\n<p>I think we should have a similar thing for <code class=\"language-php\">\\Drupal\\Core\\Plugin\\ContainerFactoryPluginInterface<\/code>, so we can easily skip adding a <code class=\"language-php\">create()<\/code> method for plugins.<\/p>\n<p>I acknowledge we also have something similar <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-13\"><a href=\"\/project\/drupal\/issues\/3294266\" title=\"Status: Needs work\">#3294266: Allow plugin service wiring via constructor parameter attributes<\/a><\/span>, but this is useful in the short term for improving DX, before removing the requirement for <code class=\"language-php\">ContainerFactoryPluginInterface<\/code>. I guess the proposed new autowire trait would be removed from drupal alongside ContainerFactoryPluginInterface, if ever that happens. So I dont see this as redundant code.<\/p>\n<h3 id=\"summary-proposed-resolution\">Proposed resolution<\/h3>\n<p>Add a AutowireTrait for plugins, so they dont need to implement create().<\/p>\n<h3 id=\"summary-remaining-tasks\">Remaining tasks<\/h3>\n<ul>\n<li>Tests.<\/li>\n<li>Should we switch any non-tests core usages now? My suggestion is not, because I imagine there will be a huge LOC change here (many LOC removals, for the better!). But create methods could also be doing other things, or not all dependencies autowirable yet.<\/li>\n<\/ul>\n<h3 id=\"summary-ui-changes\">User interface changes<\/h3>\n<p>Nil.<\/p>\n<h3 id=\"summary-api-changes\">API changes<\/h3>\n<p>New trait<\/p>\n<h3 id=\"summary-data-model-changes\">Data model changes<\/h3>\n<p>Nil<\/p>\n<h3 id=\"summary-release-notes\">Release notes snippet<\/h3>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/345","id":"345","resource":"taxonomy_term"}],"field_issue_status":"1","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"base system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3394870","id":"3394870","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3294266","id":"3294266","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1717645759","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/32403","id":32403,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3468513","id":3468513,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/245635","id":245635,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/784944","id":784944,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/118908","id":118908,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1307444","id":1307444,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2665733","id":2665733,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/180064","id":180064,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/314289","id":314289,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/81431","id":81431,"resource":"user"}],"nid":"3452852","vid":"13598416","is_new":false,"type":"project_issue","title":"Add an Autowire trait for plugins","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3452852","edit_url":"https:\/\/www.drupal.org\/node\/3452852\/edit","status":"1","promote":"0","sticky":"0","created":"1717645759","changed":"1718115148","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/81431","id":"81431","resource":"user","name":"dpi"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15629189","id":15629189,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15629194","id":15629194,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15629202","id":15629202,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15629220","id":15629220,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15635692","id":15635692,"resource":"comment"}],"comment_count":"5","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"10","has_new_content":null,"last_comment_timestamp":"1718276619"},{"body":{"value":"<p><code class=\"language-php\">dex module:command --options<\/code><\/p>\n<p>This is a proposal for a common entry point for CLI commands relying on a booted Drupal install.<\/p>\n<p>This issue comes out of many years of maintaining a slim console, and building the console work for the <a aria-label=\"https:\/\/www.drupal.org\/project\/sm\" href=\"https:\/\/www.drupal.org\/project\/sm\" rel=\"nofollow\">SM project<\/a>. Now the hope is the skeleton can move to core. <\/p>\n<p><img src=\"\/files\/issues\/2024-06-11\/dex-demo.gif\" width=\"100%\" height=\"auto\" alt=\"Dex demo screencast\" \/><\/p>\n<h2 id=\"summary\">Summary<\/h2>\n<p>I'd like to propose a new slim console initiative. All about getting a minimal viable  console entrypoint which first and foremost an <strong>easy way for Drupal modules to introduce CLI commands<\/strong>. <\/p>\n<p>This is a continuation of the discussions at the decade old <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-4\"><a href=\"\/project\/drupal\/issues\/2242947\" title=\"Status: Postponed\">#2242947: Integrate Symfony Console component to natively support command line operations<\/a><\/span>. I've read through the remarks and address points raised below.<\/p>\n<h2 id=\"Scope\/Proposal\">Scope\/Proposal<\/h2>\n<ul>\n<li>To add a single entry point of entry, for which users can run commands.<\/li>\n<li>For module developers to be able to add commands in a consistent manner.<\/li>\n<li>Only commands defined by enabled modules\/extensions.<\/li>\n<\/ul>\n<h3 id=\"exclusions\">Exclusions\/Out of scope<\/h3>\n<p>Mostly since its been proven these things have caused other issues to stall.<\/p>\n<ul>\n<li>Anything supporting a <strong>non-booted site<\/strong>. This could be addressed in the future. Projects like Drush can continue to work, and can even make use of the new commands.<\/li>\n<li>Conversion of existing core scripts.<\/li>\n<li>Adding commands to core itself.<\/li>\n<li>A base\/abstract command. The Symfony <a aria-label=\"https:\/\/github.com\/symfony\/console\/blob\/7.1\/Command\/Command.php\" href=\"https:\/\/github.com\/symfony\/console\/blob\/7.1\/Command\/Command.php\" rel=\"nofollow\"><code class=\"language-php\">Console<\/code> class<\/a> is recommended.<\/li>\n<\/ul>\n<h2 id=\"re-original-poc\">Addressing the <a href=\"https:\/\/www.drupal.org\/node\/2242947\" rel=\"nofollow\">original Symfony Console POC <\/a><\/h2>\n<p>The discussion at <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-4\"><a href=\"\/project\/drupal\/issues\/2242947\" title=\"Status: Postponed\">#2242947: Integrate Symfony Console component to natively support command line operations<\/a><\/span> is certainly valuable, however is long in the tooth at 10 years old. Discussions indicate (Comments <a aria-label=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-12809807\" href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-12809807\" rel=\"nofollow\">#129<\/a> \/ <a aria-label=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-13196648\" href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-13196648\" rel=\"nofollow\">#131<\/a> \/ <a aria-label=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-13782272\" href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-13782272\" rel=\"nofollow\">#193<\/a> \/ <a aria-label=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-14695035\" href=\"https:\/\/www.drupal.org\/project\/drupal\/issues\/2242947#comment-14695035\" rel=\"nofollow\">#207<\/a>) a preference to close out in favour of a <a aria-label=\"https:\/\/www.drupal.org\/project\/ideas\/issues\/3089277\" href=\"https:\/\/www.drupal.org\/project\/ideas\/issues\/3089277\" rel=\"nofollow\">newer issue which will provide commands for core<\/a>. Notably, that issue also has stalled. <\/p>\n<p>This issue is designed to replace <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-4\"><a href=\"\/project\/drupal\/issues\/2242947\" title=\"Status: Postponed\">#2242947: Integrate Symfony Console component to natively support command line operations<\/a><\/span> in its entirely. With respect and acknowledgement of the discussion there.<\/p>\n<h3>Addressing the  <em>Issue summary<\/em> of  the <a href=\"https:\/\/www.drupal.org\/node\/2242947\" rel=\"nofollow\">original Symfony Console POC <\/a><\/h3>\n<blockquote><p>This CLI integration should be viewed as a separate application which ships with Drupal. This might include going so far as to turn it into a subtree split similar to Drupal components.<\/p>\n<\/blockquote>\n<p>Since this proposal is so small, the main systems are included. If others, including Drush, want to recycle commands. They certainly can since the <em>command loader<\/em> system is reusable.<\/p>\n<blockquote><p>Some commands will need to run without an installed Drupal, or even without a booted kernel. Different boot levels in functional vs. kernel vs. unit tests is a useful metaphor for what is needed.<\/p>\n<\/blockquote>\n<p>The proposal here is simpler, requiring a fully booted install.<\/p>\n<blockquote><p>We use a separate service discovery container as a place to resolve dependencies and commands. This is independent of the Drupal container because it's not a Drupal, it's a console application that happens to use some Drupal as needed.<\/p>\n<\/blockquote>\n<p>This proposal would use the same container, and thusly any and all services a booted Drupal install would have access to.   <\/p>\n<blockquote><p>We use symfony\/finder to locate extensions and find service definition files <\/p>\n<\/blockquote>\n<p>This proposal does not need any new extension\/module handling. The closest thing to this would be the proposed plugin-directory auto service registration. <\/p>\n<p><strong>Discussions about core commands<\/strong><\/p>\n<p><span class=\"project-issue-issue-link project-issue-status-info project-issue-status-4\"><a href=\"\/project\/drupal\/issues\/2242947\" title=\"Status: Postponed\">#2242947: Integrate Symfony Console component to natively support command line operations<\/a><\/span> had plenty of discussion about how and where core would include commands, eventually leading to <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-13\"><a href=\"\/project\/drupal\/issues\/3422359\" title=\"Status: Needs work\">#3422359: Directory based automatic service creation<\/a><\/span>. I'd like to draw the line and not consider any core commands, other than test-only commands. The proposal here is first and foremost a benefit for contrib. Anything more can be handled in the future.<\/p>\n<h2 id=\"naming\">Proposed name<\/h2>\n<p>Not going to bikeshed too much with a name, so putting it out there:<\/p>\n<p><code class=\"language-php\">dex<\/code><\/p>\n<p><strong>Rationale<\/strong><\/p>\n<ul>\n<li>Origin story, at least for now, its for <strong>D<\/strong>rupal <strong>EX<\/strong>tensions (modules, themes, profiles), as in: it requires a booted Drupal install. \"Drupal\" itself is more ideal, however this namespace is taken, for now. And makes sense to reserve that name for an all-encompassing version supporting non-booted installs.<\/li>\n<li>It's easy to type, and memorable.<\/li>\n<li>Its Searchable (Googleable), much like <code class=\"language-php\">drush<\/code>, and unlike <code class=\"language-php\">drupal<\/code>.<\/li>\n<\/ul>\n<h2 data-heading=\"Technical proposal\">Technical proposal<\/h2>\n<h3 data-heading=\"Core implementation\">Core implementation<\/h3>\n<ul>\n<li>Provide an entry point bin file, which is then wrapped by <code class=\"language-php\">symfony\/runtime<\/code>.\n<ul>\n<li>Includes just enough information to synthesise HTTP requests \/ base URL. (Like Drush's <code class=\"language-php\">uri<\/code> option)<\/li>\n<li>Brings in command loader, and legacy commands (uses <code class=\"language-php\">configure()<\/code> instead of Attributes).<\/li>\n<\/ul>\n<\/li>\n<li><code class=\"language-php\">composer.json<\/code> changes:\n<ul>\n<li>Add <code class=\"language-php\">symfony\/runtime<\/code> , so we dont need to deal with low level \/ bootstrap \/ autoloader.<\/li>\n<li>Adds bin file so it can be placed in vendor\/bin, available in <code class=\"language-php\">PATH<\/code><\/li>\n<\/ul>\n<\/li>\n<li>Add a <code class=\"language-php\">console.command_loader<\/code> service to core; the registry of commands.<\/li>\n<li>Adds a compiler pass to core.\n<ul>\n<li>Which scans <code class=\"language-php\">src\/Command\/<\/code> directories in enabled extensions for commands, and creates tagged <em>command<\/em> services from them.<\/li>\n<li>Adds tagged <em>command<\/em> services to the <code class=\"language-php\">console.command_loader<\/code> service.<\/li>\n<\/ul>\n<\/li>\n<li>Associated tests.<\/li>\n<\/ul>\n<p><strong>Command Loader<\/strong><\/p>\n<p>The main meat of registering commands to the <em>command loader<\/em> to be the same, or as close to, how Symfony does it in <code class=\"language-php\">\\Symfony\\Component\\Console\\DependencyInjection\\AddConsoleCommandPass<\/code> (<a aria-label=\"https:\/\/github.com\/symfony\/symfony\/blob\/7.2\/src\/Symfony\/Component\/Console\/DependencyInjection\/AddConsoleCommandPass.php\" href=\"https:\/\/github.com\/symfony\/symfony\/blob\/7.2\/src\/Symfony\/Component\/Console\/DependencyInjection\/AddConsoleCommandPass.php\" rel=\"nofollow\">Code<\/a>)<\/p>\n<p><strong>Runtime<\/strong><\/p>\n<p>The proposal here relies on <code class=\"language-php\">symfony\/runtime<\/code>, which we've also discussed at <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-1\"><a href=\"\/project\/drupal\/issues\/3313404\" title=\"Status: Active\">#3313404: Use symfony\/runtime for less bespoke bootstrap\/compatibility with varied runtime environments<\/a><\/span>. I dont think we need to block on either of these issues. In fact we can preempt the runtime issue entirely, since we are providing a real use case with real motivation. It may be used in the future for non-cli purposes. Interestingly, there seems to be some community interest in <code class=\"language-php\">symfony\/runtime<\/code>, as after 18 months, the runtime issue has 40 followers already. Despite little discussion between 4 people.<\/p>\n<p>The maturity of <code class=\"language-php\">symfony\/runtime<\/code> proves we can implement this idea without needing to invent new things for Drupal.<\/p>\n<p>Testing is simplified, the surface of our testing can focus on the integration since we are not maintaining significant amounts of new code.<\/p>\n<h3 data-heading=\"Expected UX\">Expected UX<\/h3>\n<p>Since runtime sets up linking to a projects' <code class=\"language-php\">bin<\/code> directory, if you have it in your PATH, then the expected UX is:<\/p>\n<p><code class=\"language-php\">dex my:command --blah --foo=bar<\/code><\/p>\n<h3 data-heading=\"Expected DX\">Expected DX<\/h3>\n<ul>\n<li>Developers create a class in <code class=\"language-php\">src\/Command\/<\/code>. Such that namespace is <code class=\"language-php\">Drupal\\mymodule\\Command<\/code><\/li>\n<li>Class extends <code class=\"language-php\">\\Symfony\\Component\\Console\\Command\\Command<\/code>, as required by <code class=\"language-php\">AddConsoleCommandPass<\/code>.<\/li>\n<li>Class has attribute <code class=\"language-php\">#[\\Symfony\\Component\\Console\\Attribute\\AsCommand]<\/code><\/li>\n<li>The class must implement only one method: <code class=\"language-php\">protected function execute()<\/code>, featuring the necessary custom logic for the command.<\/li>\n<li>The command has access to the container for autowiring.<\/li>\n<li>Discovery is as simple as a container reset (cache clear).<\/li>\n<li>There is <strong>no<\/strong> requirement for a <code class=\"language-php\">services.yml<\/code> entry, though advanced 1% use cases can do so.<\/li>\n<\/ul>\n<p>The expected code is concise:<\/p>\n<pre class=\"codeblock\"><code class=\"language-php\">\ndeclare(strict_types=1);\n\nnamespace Drupal\\dex_test\\Command;\n\nuse Drupal\\Component\\Datetime\\TimeInterface;\nuse Symfony\\Component\\Console\\Attribute\\AsCommand;\nuse Symfony\\Component\\Console\\Command\\Command;\nuse Symfony\\Component\\Console\\Input\\InputInterface;\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\nuse Symfony\\Component\\Console\\Style\\SymfonyStyle;\n\n#[AsCommand(name: 'example:command', description: 'An example command.')]\nfinal class DexExampleCommand extends Command {\n\n  public function __construct(\n    private readonly TimeInterface $dateTime,\n  ) {\n    parent::__construct();\n  }\n\n  protected function execute(InputInterface $input, OutputInterface $output): int {\n    $io = new SymfonyStyle($input, $output);\n\n    $now = new \\DateTimeImmutable('@' . $this-&gt;dateTime-&gt;getRequestTime());\n    $io-&gt;note('The current time is ' . $now-&gt;format('r'));\n\n    return static::SUCCESS;\n  }\n\n}\n<\/code><\/pre><h2 id=\"drush-core-nonbooted\"><strong>Drush, Core Commands, Future Non-Booted version<\/strong><\/h2>\n<p>Drush may continue to exist for now as it provides use cases outside of a booted Drupal installation, including code generation, install, etc. In fact Drush may choose to provide a layer to register the commands we're adding here, to Drush itself.<\/p>\n<p>Perhaps a future all-encompassing Drush replacement would utilise the <code class=\"language-php\">drupal<\/code> namespace and cleanly replace <code class=\"language-php\">dex<\/code>. <\/p>\n<p><span class=\"project-issue-issue-link project-issue-status-info project-issue-status-1\"><a href=\"\/project\/ideas\/issues\/3089277\" title=\"Status: Active\">#3089277: Provide core CLI commands for the most common features of drush<\/a><\/span> is a good place for working towards core commands or non bootstrap commands. Which would not block or be postponed on the issue here. <\/p>\n<h2 id=\"mr-notes\">MR notes<\/h2>\n<ul>\n<li>My vision for this issue is not too much larger than the companion MR, please take a look. <\/li>\n<li>Very basic env var pieces are included in the Dex command in order to resolve issues with not being in web requests.<\/li>\n<li>File system auto discovery is limited to Drupal extensions, not vendor. Though if a Drupal extension wants to register a command located in vendor, they can via manually tagged service definitions instead of <code class=\"language-php\">#[AsCommand]<\/code>. <code class=\"language-php\">vendor<\/code> doesn't participate in autodiscovery for modules, either.<\/li>\n<li>Dependencies are provided by autowiring. If aliases don\u2019t exist for dependencies, they can be defined in the custom project, create a patch in the service-defining project, or ultimately can fall back to defining a command in services.yml<\/li>\n<\/ul>\n<h2 id=\"other-notes\">Other notes<\/h2>\n<ul>\n<li>Existing commands, such as those from <a aria-label=\"https:\/\/www.drupal.org\/project\/config_split\" href=\"https:\/\/www.drupal.org\/project\/config_split\" rel=\"nofollow\">Config Split<\/a> or <a aria-label=\"https:\/\/drupal.org\/project\/tome\" href=\"https:\/\/drupal.org\/project\/tome\" rel=\"nofollow\">Tome<\/a>, those commands get registered automatically. <\/li>\n<li>This wouldn\u2019t be a dev only console. Commands can opt to make themselves hidden using compiler-passes, or env-based conditionals, if they want to prevent execution on production.<\/li>\n<li>If this issue progresses to commit, please also considering crediting those with significant participation in <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-4\"><a href=\"\/project\/drupal\/issues\/2242947\" title=\"Status: Postponed\">#2242947: Integrate Symfony Console component to natively support command line operations<\/a><\/span>.<\/li>\n<\/ul>\n<h2 id=\"contrib-edition\">Contrib Project<\/h2>\n<p>I have <a aria-label=\"https:\/\/www.drupal.org\/project\/dex_console\" href=\"https:\/\/www.drupal.org\/project\/dex_console\" rel=\"nofollow\">created an intentionally short lived project<\/a> that gives contrib all its needs for command execution. It contains just the pieces needed to evaluate the UX\/DX of the MR for this issue. And to avoid the inability to have runtime set things up when used as a patch, since patches can\u2019t modify composer.json until after Composer does its thing. Unless of course you apply the patch to a branch of some kind and require it. <\/p>\n<p><a href=\"https:\/\/www.drupal.org\/project\/dex_console\" rel=\"nofollow\">https:\/\/www.drupal.org\/project\/dex_console<\/a><\/p>","summary":"","format":"1"},"taxonomy_vocabulary_9":[{"uri":"https:\/\/www.drupal.org\/api-d7\/taxonomy_term\/202698","id":"202698","resource":"taxonomy_term"}],"field_issue_status":"13","field_issue_priority":"200","field_issue_category":"3","field_issue_component":"base system","field_project":{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3060","id":"3060","resource":"node"},"field_issue_files":[{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6947729","id":"6947729","resource":"file"},"display":"1"},{"file":{"uri":"https:\/\/www.drupal.org\/api-d7\/file\/6948036","id":"6948036","resource":"file"},"display":"1"}],"field_issue_related":[{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3089277","id":"3089277","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/2242947","id":"2242947","resource":"node"},{"uri":"https:\/\/www.drupal.org\/api-d7\/node\/3313404","id":"3313404","resource":"node"}],"field_issue_version":"11.0.x-dev","field_issue_credit":[],"field_issue_last_status_change":"1718113667","flag_project_issue_follow_user":[{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1868952","id":1868952,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/35733","id":35733,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/241634","id":241634,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/74669","id":74669,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/174740","id":174740,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3041555","id":3041555,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/23","id":23,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/315522","id":315522,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/99644","id":99644,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/80733","id":80733,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/32403","id":32403,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/107701","id":107701,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/97885","id":97885,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/12302","id":12302,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/219330","id":219330,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3566953","id":3566953,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/429621","id":429621,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/220112","id":220112,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/157079","id":157079,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/102134","id":102134,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3725797","id":3725797,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/370574","id":370574,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2665733","id":2665733,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/438598","id":438598,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1463982","id":1463982,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/2421800","id":2421800,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3747965","id":3747965,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1036766","id":1036766,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/118908","id":118908,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/556138","id":556138,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/314289","id":314289,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/3502327","id":3502327,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/1850070","id":1850070,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/180064","id":180064,"resource":"user"},{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/81431","id":81431,"resource":"user"}],"nid":"3453474","vid":"13602624","is_new":false,"type":"project_issue","title":"CLI entry point in Drupal Core (Dex)","language":"en","url":"https:\/\/www.drupal.org\/project\/drupal\/issues\/3453474","edit_url":"https:\/\/www.drupal.org\/node\/3453474\/edit","status":"1","promote":"0","sticky":"0","created":"1717927601","changed":"1718397520","author":{"uri":"https:\/\/www.drupal.org\/api-d7\/user\/81431","id":"81431","resource":"user","name":"dpi"},"book_ancestors":[],"comment":"2","comments":[{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15633037","id":15633037,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15633036","id":15633036,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15633040","id":15633040,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15633041","id":15633041,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15633133","id":15633133,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634027","id":15634027,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634227","id":15634227,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634473","id":15634473,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634574","id":15634574,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634577","id":15634577,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15634243","id":15634243,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15635646","id":15635646,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15636071","id":15636071,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15637112","id":15637112,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15637712","id":15637712,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15637891","id":15637891,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15637906","id":15637906,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15638847","id":15638847,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15639178","id":15639178,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15640241","id":15640241,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15640845","id":15640845,"resource":"comment"},{"uri":"https:\/\/www.drupal.org\/api-d7\/comment\/15640836","id":15640836,"resource":"comment"}],"comment_count":"22","comment_count_new":false,"feeds_item_guid":null,"feeds_item_url":null,"feed_nid":null,"flag_flag_tracker_follow_user":[],"flag_tracker_follower_count":"35","has_new_content":null,"last_comment_timestamp":"1718397520"}]